name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Test and build APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # Source: https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
      - name: Enable KVM group perms üîß
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper üìú
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up JDK 17 ‚òï
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle üß∞
        uses: gradle/actions/setup-gradle@v3

      - name: Lint Check üßπ
        run: ./gradlew lint

      - name: Run local tests üß™
        run: ./gradlew test

      # Extra parameters added from b/287312019.
      # Removed swiftshader_indirect since it should be unnecessary after "Enable KVM group perms"¬ø?
      - name: Run instrumented tests (managed devices) üì±
        run: |
          ./gradlew cleanManagedDevices --unused-only
          ./gradlew pixel2api32DebugAndroidTest \
            -Pandroid.experimental.testOptions.managedDevices.setupTimeoutMinutes=60 \
            -Pandroid.experimental.androidTest.numManagedDeviceShards=1 \
            -Pandroid.experimental.testOptions.managedDevices.maxConcurrentDevices=1

      - name: Decode Keystore üîë
        id: keystore-recreation
        env:
          ENCODED_KEYSTORE: ${{ secrets.SIGNING_KEYSTORE }}
        run: |
          KS_RECREATION_WORK_PATH="${RUNNER_TEMP}"/keystore
          mkdir "${KS_RECREATION_WORK_PATH}"
          echo "$ENCODED_KEYSTORE" | base64 -di > "${KS_RECREATION_WORK_PATH}"/keystore_file.jks
          echo "KEYSTORE_FILE_PATH=${KS_RECREATION_WORK_PATH}/keystore_file.jks" >> "$GITHUB_OUTPUT"

      - name: Build release variant üèóÔ∏è
        env:
          SIGNING_STORE_PATH: ${{ steps.keystore-recreation.outputs.KEYSTORE_FILE_PATH }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: ./gradlew :app:assembleRelease

      - name: Upload Release Build to Artifacts üì¶
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          if-no-files-found: error
          path: app/build/outputs/apk/release/app-release.apk

  deploy:
    name: Create new release
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: write

    steps:
      - name: Download Release Build from Artifacts ‚¨áÔ∏è
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts

      - name: Create Github Release üöÄ
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          draft: true
          fail_on_unmatched_files: true
          files: app-release.apk
